<?php

/**
* Implementation of hook_perm()
*/

function hook_perm() {
  return array('administer Orphan Object Adminstration');
}

/**
* Implementation of hook_menu()
*/
function orphan_object_menu() {
  $items = array();
  $items['admin/content/orphan-object'] = array(
    'title' => t('Orphan Object Administration'),
    'page callback' => 'orphan_object_form',
	'access callback' => 'user_access',
    'access arguments' => array('administer Orphan Object Adminstration'),
    'description' => t('Administrative Interface for management of Orphaned Fedora Objects'),
  );
  return $items;
}

/**
* Generates a page for the form
*/
function orphan_object_form() {

  // Form builder call to build the form
  return drupal_get_form('orphan_object_formpage');

}

/**
* Builds the orphan_object form
*/
function orphan_object_formpage($form_state) {
   
  // Creates an array to hold the values to be used to create the form elements
  $orphans = array
  (
    array('oid' => 0, 'title' => '<a href = "http://192.168.56.195/fedora/repository/islandora:2216/-/Heart%20Beat">Heart Beat</a>', 'identifier' => 'islandora:2216'),
    array('oid' => 1, 'title' => '<a href = "http://192.168.56.195/fedora/repository/islandora:2221/-/Elmsdale">Elmsdale</a>', 'identifier' => 'islandora:2221'),
  );
  
  // Creates elements from the above values and sets up an array for the checkboxes
  foreach($orphans as $orphan)
  {
    $active[$orphan['oid']] = ''; 
    $form[$orphan['oid']]['title'] = array 
    (
      '#value' => $orphan['title'],
    );
    $form[$orphan['oid']]['identifier'] = array 
    (
      '#value' => $orphan['identifier'],
    );
  } 
  
  // Creates the checkboxes
  $form['active'] = array(
    '#type' => 'checkboxes',
	'#options' => $active,
	'#default_value' => variable_get('orphan_object_formpage_values', array(0,1)),
  );
  
  // Creates the Save Configuration button
  $form['submit'] = array(
    '#type' => 'submit',
	'#value' => 'Save Configuration',
  );
  
  //Set form submit and theme
  $form['#submit'][] = 'orphan_object_formpage_submit';
  $form['#theme'] = 'orphan_object_theme'; 
  
  return $form;
}

/**
* Sets what occurs when the Save Configuration is clicked
*/

function orphan_object_formpage_submit($form, &$form_state) {
  variable_set('orphan_object_formpage_values', $form_state['values']['active']);
  drupal_set_message(t('The update has been performed.'));
}

/**
* Sets up for the theme
*/

function orphan_object_theme(){
  return array
  (
    'orphan_object_theme' => array
	(
	  'arguments' => array('form' => NULL)
	),
  );
}
  
/**
* Sets the theme
*/  
  
function theme_orphan_object_theme($form){
  $rows = array();

  //Creates the table rows
  foreach(element_children($form['active']) as $oid){
    $row = array(); 
    $row[] = drupal_render($form['active'][$oid]); 
    $row[] = drupal_render($form[$oid]['title']); 
    $row[] = drupal_render($form[$oid]['identifier']); 
    $rows[] = $row;
  }
  
  //if there are rows add these headers
  if(count($rows)){
    $header = array(t('Active'), t('Object Title'), t('Identifier')); 
  }
  //otherwise add these headers and give this message
  else{
    $header = array(t('Active'), t('Object Title'), t('Identifier')); 
    $row = array();
    $row[] = array
    (
      'data' => t('No Orphans were found'),
      'colspan' => 2,
      'style' => 'text-align:center',
    );
    $rows[] = $row;
  }
  
  //set as a table theme and return the output
  $output = theme('table', $header, $rows);
  $output .=drupal_render($form);
  return $output;  
}